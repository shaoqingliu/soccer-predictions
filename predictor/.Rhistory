h
h["England"] <- matrix(c(1, 2, 3, 4), 2, 2)
h
matrix(c(1, 2, 3, 4), 2, 2)
h["England"] <- matrix(c(1, 2, 3, 4), 2, 2)
h["England"]
str <- h["England"]
str
str[1, 1]
str <- h[["England"]]
str[1, 1]
str
length(unique(matches[, "HomeTeam"))
matches[, "HomeTeam"]
length(unique(matches[, "HomeTeam"])
length(unique(matches[, "HomeTeam"]))
~True
!True
h = hash()
h <- hash()
h["Portugal"] <- c(1, 2)
h[["Portugal"]]
str <- h[["Portugal"]]
str[1]
str[2]
strcat("Home", "Team")
paste("Home", "Team")
paste("Home", "Team", sep="")
matches[1, "HomeTeam"]
match <- matches[1, ]
match
match["HomeTeam"]
match
matches[1, ] <- match
h.hasKey("Portugal")
help(hash)
h.has.key("Portugal")
has.key("Portugal", h)
has.key(h, "Portugal")
source("constructTeams.R")
source("constructTeams.R")
source("constructTeams.R")
teams <- constructTeams(matches)
teams <- constructTeams(matches)
teams <- constructTeams(matches)
has.key("Portugal", h)
teams <- constructTeams(matches)
teams <- constructTeams(matches)
1 < 5 && 2 < 5
1 < 5 && 2 < 5
1 <= 5 && 2 < 5
source("constructTeams.R")
teams <- constructTeams(matches)
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
numTeams <- length(unique(matches[1, "HomeTeam"]))
numTeams
numTeams <- length(unique(matches[, "HomeTeam"]))
numTeams
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
teams
teams <- constructTeams(matches)
teams
source("constructTeams.R")
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
FALSE
source("constructTeams.R")
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
teams
source("constructTeams.R")
teams <- constructTeams(matches)
source("constructTeams.R")
teams <- constructTeams(matches)
teams
q()
source("forecastGoals.R")
source("forecastGoals.R")
teams
q()
matches
names(matches)
meanGoalsMap["Knockout"]
meanGoalsMap["knockout"]
meanGoalsMap[["knockout"]]
homeMeanGoals
meansGoalsMap
source("forecastGoals.R")
source("fitGoals.R")
source("fitGoals.R")
source("fitGoals.R")
source("fitGoals.R")
source("fitGoals.R")
meanGoalsMap
source("fitGoals.R")
verifyModel(model)
model$AIC
model$BIC
names(model)
model$beta
model$beta1
model$beta1[1]
model$beta1[[1]]
model$beta1[[2]]
model$beta1[[3]]
model$beta1[[2]]
model$beta1[[3]]
model$beta2
model$beta3
model$beta3[1]
model$beta3[[1]]
names(model)
model$parameters
source("fitGoals.R")
source("fitGoals.R")
source("fitGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
model$beta1
model$beta1[1]
model$beta1[[1]]
teams[["Portugal"]]
homeStr <- teams[["Portugal"]]
homeStr
homeStr[1]
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
df <- data.frame()
df
df[, "HomeGoals"] <- 5
df[, "HomeGoals"] <- [5]
df[, "HomeGoals"] <- c(1)
df[1, "HomeGoals"] <- c(1)
df
df[1, "HomeGoals"] <- 1
df[1, "AwayGoals"] <- 1
df
source("forecastGoals.R")
list("integer" = 1, "names" = 1)
d = list("integer" = 1, "names" = 1)
d
source("forecastGoals.R")
list("teams"=teams, "matches"=matches)
L <- list("teams"=teams, "matches"=matches)
L
L$matches
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
exp(c(1, 2, 3))
source("forecastGoals.R")
exp(c(1, 2, 3))
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
matrix(nrow=20, ncol=20)
M <- matrix(nrow=20, ncol=20)
M <- matrix(nrow=21, ncol=21)
M
M
help(mapply)
matrix(mapply(function(x, i, j) x + i + j, M, row(M), col(M)), nrow = nrow(M))
matrix(mapply(function(x, i, j) x + i + j, M, row(M), col(M)), nrow = nrow(M))
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
)
)
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
homeAwayGoals <- forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
homeAwayGoals
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
homeAwayGoals
source("forecastGoals.R")
forecastGoals("Portugal", "Spain", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "France", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Andorra", teams, model, meanGoalsMap, "group")
forecastGoals("Portugal", "Andorra", teams, model, meanGoalsMap, "qualifier")
forecastGoals("Portugal", "San Marino", teams, model, meanGoalsMap, "qualifier")
source("fitGoals.R")
verifyModel(model)
model$AIC
model$BICc
model$BIC
source("")
source("fitGoals.R")
source("fitGoals.R")
source("fitGoals.R")
source("fitGoals.R")
source("forecastMatch.R")
forecastMatch("Portugal", "Andorra", "qualifier")
source("forecastMatch.R")
forecastMatch("Portugal", "Andorra", "qualifier")
source("forecastMatch.R")
forecastMatch("Portugal", "Andorra", "qualifier")
forecastMatch("Portugal", "Spain", "qualifier")
forecastMatch("Spain", "Spain", "qualifier")
forecastMatch("Spain", "Portugal", "qualifier")
forecastMatch("Spain", "Portugal", "group")
forecastMatch("Spain", "Portugal", "knockout")
forecastMatch("Spain", "Slovakia", "knockout")
forecastMatch("Spain", "Slovakia", "group")
forecastMatch("Spain", "Slovakia", "qualifier")
q()
source("forecastMatch.R")
source("fitGoals.R")
forecastMatch("Spain", "Slovakia", "group")
forecastMatch("Belgium", "Hungary", "group")
forecastMatch("Belgium", "Hungary", "group")
forecastMatch("Germany", "Slovakia", "group")
forecastMatch("Slovakia", "Slovakia", "group")
forecastMatch("Slovakia", "Germany", "group")
forecastMatch("France", "Republic of Ireland", "group")
verifyModel(model)
model<-AIC
verifyModel(model)
source("fitGoals.R")
model$AIC
model$BIC
source("fitGoals.R")
model$AIC
modelBIC
model$BIC
verifyModel(model)
forecastMatch("France", "Republic of Ireland", "knockout")
forecastMatch("Germany", "Slovakia", "knockout")
teams[["Slovakia"]]
teams[["Germany"]]
source("fitGoals.R")
teams[["Germany"]]
forecastMatch("France", "Republic of Ireland", "knockout")
forecastMatch("Germany", "Slovakia", "knockout")
forecastMatch("France", "Republic of Ireland", "knockout")
forecastMatch("Germany", "Slovakia", "knockout")
forecastMatch("Germany", "Slovakia", "group")
forecastMatch("Germany", "Slovakia", "knockout")
forecastMatch("Hungary", "Belgium", "knockout")
q()
teams("Spain")
source("fitGoals.R")
teams("Spain")
teams
teams["Spain"]
teams["Germany"]
teams["Croatia"]
teams["France"]
teams["Poland"]
teams["Switzerland"]
q()
source("fitGoals.R")
matches
matches$Date
matches$Dates
source("fitGoals.R")
matches$Dates
matches$Date
matches
matches[1, "Date"]
matches <- matches[order(rev(matches$Date))
matches <- matches[order(rev(matches$Date)), ]
matches[1, "Date"]
"2011/09/02" < "2014/09/02"
"2015/09/02" < "2014/09/02"
"2015/10/02" < "2014/09/02"
matches <- matches[order(rev(matches$Date)), ]
matches[2, "Date"]
matches[3, "Date"]
matches[4, "Date"]
matches[100, "Date"]
matches <- matches[order(as.Date(matches$Date, format="%Y/%m/%d")), ]
matches[1, "Date"]
matches <- matches[order(rev(as.Date(matches$Date, format="%Y/%m/%d"))), ]
matches[1, "Date"]
matches <- matches[order(rev(as.Date(matches[, "Date"], format="%Y/%m/%d"))), ]
matches <- matches[order(rev(as.Date(matches[, "Date"], format="%Y/%m/%d"))), ]
matches[1, "Date"]
source("fitGoals.R")
matches[1, "Date"]
matches[2, "Date"]
matches <- matches[order(rev(as.Date(matches[, "Date"], format="%Y/%m/%d"))), ]
matches[1, "Date"]
matches <- matches[order(rev(as.Date(matches$Date, format="%Y/%m/%d"))), ]
matches[1, "Date"]
matches <- matches[order(as.Date(matches[, "Date"], format="%Y/%m/%d")), ]
matches[1, "Date"]
matches[2, "Date"]
matches <- matches[order(rev(as.Date(matches[, "Date"], format="%Y/%m/%d"))), ]
matches[1, "Date"]
matches[2, "Date"]
matches[3, "Date"]
source("fitGoals.R")
source("fitGoals.R")
matches[1, "Date"]
teams["Spain"]
verifyModel(model)
model$BIC
model$AIC
source("fitGoals.R")
model$AIC
model$BIC
source("fitGoals.R")
source("fitGoals.R")
model$AIC
model$BIC
source("fitGoals.R")
model$AIC
model$BIC
model$BIC
source("fitGoals.R")
source("fitGoals.R")
model$AIC
model$BIC
source("fitGoals.R")
source("fitGoals.R")
model$AIC
model$BIC
verifyModel("fitGoals.R")
verifyModel(model)
source("fitGoals.R")
source("fitGoals.R")
verifyModel(model)
model$AIC
model$BIC
verifyModel(model)
source("fitGoals.R")
forecastMatch("Hungary", "Belgium", "knockout")
forecastMatch("Poland", "Belgium", "knockout")
forecastMatch("Poland", "Portugal", "knockout")
forecastMatch("Spain", "Portugal", "knockout")
forecastMatch("Spain", "Italy", "knockout")
forecastMatch("Spain", "Portugal", "knockout")
source("forecastMatch.R")
forecastMatch("Spain", "Portugal", "knockout")
forecastMatch("Spain", "Portugal", "knockout")
forecastMatch("France", "Portugal", "knockout")
forecastMatch("Spain", "Croatia", "knockout")
forecastMatch("Spain", "Germany", "knockout")
teams["Slovakia"]
teams["Germany"]
teams["Spain"]
teams["Poland"]
teams[""]
source("forecastMatch.R")
source("forecastMatch.R")
q()
source("forecastMatch.R")
source("fitGoals.R")
model
model$AIC
model$BIC
source("fitGoals.R")
source("fitGoals.R")
model$BIC
model$AIC
verifyModel(model)
teams("Spain")
teams["Spain"]
teams["Portugal"]
teams["Poland"]
teams["France"]
teams["Germany"]
teams["Italy"]
teams["Croatia"]
forecastMatch("Italy", "Spain", "knockout")
forecastMatch("England", "Iceland", "knockout")
3 * log(1 + 5, 10)
3 * log(1 + 1, 10)
3 * log(1 + 0, 10)
3 * log(1 + 1, 10)
3 * log(1 + 2, 10)
3 * log(1 + 3, 10)
3 * log(1 + 4, 10)
3 * log(1 + 5, 10)
q()
source("fitGoals.R")
model<-AIC
source("fitGoals.R")
model$AIC
model$BIC
verifyModel(model)
q()
source("fitGoals.R")
model$AIC
model$BIC
verifyModel(model)
forecastMatches("Italy", "Spain", "knockout")
forecastMatch("Italy", "Spain", "knockout")
forecastMatch("England", "Iceland", "knockout")
forecastMatch("Germany", "Slovakia", "knockout")
model$AIC
model$BIC
source("fitGoals.R")
model$AIC
model$BIC
R
source("fitGoals.R")
model$AIC
model$BIC
verifyModel(model)
forecastMatches("Spain", "Italy", "knockout")
forecastMatch("Spain", "Italy", "knockout")
forecastMatch("England", "Iceland", "knockout")
forecastMatch("Spain", "Italy", "knockout")
forecastMatch("Andorra", "Italy", "qualifier")
forecastMatch("Ukraine", "Italy", "qualifier")
forecastMatch("Ukraine", "Italy", "group")
forecastMatch("Ukraine", "France", "group")
forecastMatch("Ukraine", "Germany", "group")
source("fitGoals.R")
forecastMatch("France", "Republic of Ireland", "knockout")
forecastMatch("Germany", "Slovakia", "knockout")
forecastMatch("Belgium", "Hungary", "knockout")
forecastMatch("Hungary", "Belgium", "knockout")
source("fitGoals.R")
forecastMatch("Italy", "Spain", "knockout")
source("fitGoals.R")
model$AIC
model$BIC
forecastMatch("Poland", "Portugal", "knockout")
forecastMatch("Wales", "Belgium", "knockout")
forecastMatch("Germany", "Italy", "knockout")
forecastMatch("Germany", "Spain", "knockout")
forecastMatch("France", "Iceland", "knockout")
forecastMatch("France", "Iceland", "knockout")
source("fitGoals.R")
model$AIC
model$BIC
source("fitGoals.R")
model$AIC
model$BIC
forecastMatch("France", "Iceland", "knockout")
forecastMatch("Spain", "Italy", "knockout")
forecastMatch("Germany", "Italy", "knockout")
forecastMatch("Poland", "Portugal", "knockout")
forecastMatch("England", "Iceland", "knockout")
source("fitGoals.R")
model$AIC
model$BIC

source("fitGoals.R")
model$AIC
model$BIC
source("fitGoals.R")
model$AIC
model$BIC
forecastMatch("England", "Iceland", "knockout")
forecastMatch("Spain", "Italy", "knockout")
forecastMatch("Germany", "Slovakia", "knockout")
forecastMatch("France", "Republic of Ireland", "knockout")
forecastMatch("Belgium", "Republic of Ireland", "knockout")
forecastMatch("Belgium", "Hungary", "knockout")
source("fitGoals.R")
forecastMatch("Spain", "Italy", "knockout")
match$AIC
model$AIC
model$BIC
source("fitGoals.R")\
source("fitGoals.R")
model$AIC
model$BIC
forecastMatch("Spain", "Italy", "knockout")
forecastMatch("England", "Iceland", "knockout")
forecastMatch("Belgium", "Hungary", "knockout")
source("fitGoals.R")
model
model$BIC
model$AIC
forecastMatch("Germany", "Italy", "knockout")
forecastMatch("Portugal", "Poland", "knockout")
forecastMatch("France", "Iceland", "knockout")
forecastMatch("Belgium", "Wales", "knockout")
length([1 2; 3 4; 5 6])
forecastMatch("Germany", "Italy", "knockout")
source("fitGoals.R")
forecastMatch("Poland", "Portugal", "knockout")
forecastMatch("Germany", "Portugal", "knockout")
forecastMatch("Germany", "Italy", "knockout")
forecastMatch("France", "Iceland", "knockout")
forecastMatch("Germany", "Andorra", "qualifier")
forecastMatch("Andorra", "Germany", "qualifier")
forecastMatch("Germany", "Andorra", "qualifier")
forecastMatch("Gibraltar", "Germany", "qualifier")
forecastMatch("Gibraltar", "Poland", "qualifier")
model$AIC
model$BIC
q()
