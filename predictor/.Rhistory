forecastMatch("Germany", "France", "knockout", forecastPrereq)
forecastMatch("Wales", "Portugal", "knockout", forecastPrereq)
forecastMatch("Germany", "France", "knockout", forecastPrereq)
verifiedMatches <- verifyModel(2016)
verifiedMatches
verifiedMatches[["mse"]]
verifiedMatches[["MSE"]]
sum(verifiedMatches[["MSE"]])
q()
verifiedMatches <- verifyModel(2016)
source("fitGoals.R")
verifiedMatches <- verifyModel(2016)
verifiedMatches <- verifyModel(2016)
verifiedMatches[["MSE"]]
sum(verifiedMatches[["MSE"]])
forecastMatch("Germany", "France", "knockout", forecastPrereq)
forecastMatch("France", "Germany", "knockout", forecastPrereq)
forecastMatch("France", "Germany", "qualifier", forecastPrereq)
forecastPrereq["meanGoalsMap"]
forecastMatch("Poland", "Germany", "qualifier", forecastPrereq)
forecastPrereq
forecastPrereq["model"]
source("verifyModel.R")
verifiedMatches <- verifyModel(2016)
verifiedMatches <- verifyModel(2016)
forecastPrereq <- fitGoals('2016-07-03')
forecastMatch("Poland", "Germany", "qualifier", forecastPrereq)
forecastMatch("France", "Germany", "qualifier", forecastPrereq)
forecastMatch("France", "Germany", "knockout", forecastPrereq)
forecastPrereq <- fitGoals('2016-07-03', includeQs=TRUE)
forecastMatch("France", "Germany", "knockout", forecastPrereq)
forecastMatch("France", "Germany", "qualifier", forecastPrereq)
forecastMatch("Germany", "France", "qualifier", forecastPrereq)
forecastMatch("Andorra", "France", "qualifier", forecastPrereq)
forecastMatch("Andorra", "Germany", "qualifier", forecastPrereq)
forecastMatch("Andorra", "France", "qualifier", forecastPrereq)
forecastMatch("Andorra", "Russia", "qualifier", forecastPrereq)
forecastMatch("China", "Russia", "qualifier", forecastPrereq)
forecastMatch("China", "Japan", "qualifier", forecastPrereq)
forecastMatch("South Korea", "Japan", "qualifier", forecastPrereq)
forecastMatch("South Korea", "China", "qualifier", forecastPrereq)
forecastMatch("South Korea", "Japan", "qualifier", forecastPrereq)
forecastMatch("American Samoa", "Tahiti", "qualifier", forecastPrereq)
forecastMatch("China", "Tahiti", "qualifier", forecastPrereq)
forecastMatch("American Samoa", "Andorra", "qualifier", forecastPrereq)
forecastMatch("American Samoa", "Samoa", "qualifier", forecastPrereq)
forecastMatch("American Samoa", "Australia", "qualifier", forecastPrereq)
forecastMatch("American Samoa", "Germany", "qualifier", forecastPrereq)
forecastMatch("Japan", "Australia", "qualifier", forecastPrereq)
forecastMatch("Australia", "Australia", "qualifier", forecastPrereq)
forecastMatch("Australia", "Japan", "qualifier", forecastPrereq)
forecastMatch("Australia", "Samoa", "qualifier", forecastPrereq)
forecastMatch("Australia", "Tahiti", "qualifier", forecastPrereq)
forecastMatch("Samoa", "Tahiti", "qualifier", forecastPrereq)
forecastMatch("Argentina", "Tahiti", "qualifier", forecastPrereq)
forecastMatch("Argentina", "Chile", "qualifier", forecastPrereq)
forecastMatch("Chile", "Argentina", "qualifier", forecastPrereq)
source("fitGoals.R")
forecastPrereq <- fitGoals('2016-07-03', includeQs=TRUE)
source("fitGoals.R")
forecastPrereq <- fitGoals('2016-07-03', includeQs=TRUE)
forecastPrereq <- fitGoals('2016-07-03', includeQs=TRUE)
forecastMatch("Chile", "Argentina", "qualifier", forecastPrereq)
forecastPrereq["teams"]
forecastPrereq["meanGoalsMap"]
forecastPrereq["MeanGoalsMap"]
forecastPrereq["meanGoalsMap"]
list(x="5")
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03")
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03")
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=FALSE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=FALSE)
forecastPrereq <- fitGoals("2016-07-03", includeQs=FALSE)
forecastPrereq <- fitGoals("2016-07-03")
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
forecastPrereq <- fitGoals("2016-07-03")
source("fitGoals.R")
forecastPrereq <- fitGoals("2016-07-03")
forecastMatch("Chile", "Argentina", "qualifier", forecastPrereq)
forecastMatch("Germany", "Argentina", "qualifier", forecastPrereq)
forecastMatch("Germany", "France", "knockout", forecastPrereq)
forecastPrereq <- fitGoals("2016-07-03", includeQs=TRUE)
forecastMatch("Germany", "France", "knockout", forecastPrereq)
forecastMatch("Portugal", "Wales", "knockout", forecastPrereq)
forecastMatch("Chile", "Argentina", "qualifier", forecastPrereq)
forecastMatch("China", "India", "qualifier", forecastPrereq)
forecastMatch("India", "China", "qualifier", forecastPrereq)
forecastMatch("Pakistan", "China", "qualifier", forecastPrereq)
forecastMatch("Pakistan", "India", "qualifier", forecastPrereq)
forecastMatch("India", "China", "qualifier", forecastPrereq)
forecastMatch("Pakistan", "India", "qualifier", forecastPrereq)
forecastMatch("Iran", "India", "qualifier", forecastPrereq)
forecastMatch("Iran", "China", "qualifier", forecastPrereq)
forecastMatch("China", "Iran", "qualifier", forecastPrereq)
forecastMatch("China", "South Korea", "qualifier", forecastPrereq)
forecastMatch("China", "Japan", "qualifier", forecastPrereq)
forecastMatch("Iran", "Japan", "qualifier", forecastPrereq)
forecastMatch("Russia", "Japan", "qualifier", forecastPrereq)
forecastMatch("Australia", "Japan", "qualifier", forecastPrereq)
forecastMatch("Japan", "Australia", "qualifier", forecastPrereq)
forecastMatch("Cook Islands", "Australia", "qualifier", forecastPrereq)
forecastMatch("Cook Islands", "Samoa", "qualifier", forecastPrereq)
forecastMatch("Cook Islands", "Tafahi", "qualifier", forecastPrereq)
forecastMatch("Cook Islands", "Tahaiti", "qualifier", forecastPrereq)
forecastMatch("Cook Islands", "Tahiti", "qualifier", forecastPrereq)
forecastMatch("Tahiti", "Australia", "qualifier", forecastPrereq)
forecastMatch("Tahiti", "New Zealand", "qualifier", forecastPrereq)
forecastMatch("Australia", "New Zealand", "qualifier", forecastPrereq)
forecastMatch("New Zealand", "Australia", "qualifier", forecastPrereq)
forecastMatch("Venezuela", "Brazil", "qualifier", forecastPrereq)
forecastMatch("Colombia", "Brazil", "qualifier", forecastPrereq)
forecastMatch("Brazil", "Colombia", "qualifier", forecastPrereq)
forecastMatch("Argentina", "Colombia", "qualifier", forecastPrereq)
forecastMatch("Colombia", "Argentina", "qualifier", forecastPrereq)
forecastMatch("Colombia", "Chile", "qualifier", forecastPrereq)
q()
matches
matches <- forecastPrereq[["Matches"]]
matches
names(forecastPrereq)
matches <- forecastPrereq[["matches"]]
matches
matches["GeneralContest"]
aggregate(matches[, "HomeGoals"], list(matches$GeneralContest), mean)
aggregate(matches[, "AwayGoals"], list(matches$GeneralContest), mean)
aggregate(matches[, "HomeGoals"], list(matches$HomeAdvantage), mean)
aggregate(matches[, "AwayGoals"], list(matches$HomeAdvantage), mean)
aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), mean)
aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), mean)
homeGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), mean)
homeGoals
names(homeGoals)
homeGoals["Group.1"=="group"]
homeGoals["Group.1"=="group", ]
homeGoals["Group.1"]
homeGoals
homeGoals[["Group.1"]]
homeGoals["Group.1"]
homeGoals[which("Group.1" == "Group")]
homeGoals[which(homeGoals$Group.1 == "Group")]
homeGoals[which(homeGoals$Group.1 == "Group"), ]
which(homeGoals$Group.1 == "Group")
which(homeGoals[["Group.1"]] == "Group")
homeGoals[["Group.1"]] == "Group"
homeGoals[which("Group.1" == "group")]
homeGoals[which("Group.1" == "group"), ]
homeGoals[which(homeGoals$Group.1 == "group"), ]
homeGoals[which(homeGoals$Group.1 == "group" ** homeGoals$Group.2 == 1), ]
homeGoals[which(homeGoals$Group.1 == "group" && homeGoals$Group.2 == 1), ]
homeGoals[which(homeGoals$Group.2 == 1), ]
which(homeGoals$Group.1 == "group")
intersect(which(homeGoals$Group.1 == "group"), 4)
intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 1))
homeGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
homeGoals
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), mean)
homeGoals
awayGoals
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
homeGoals
awayGoals
homeGoals
intersect(which(homeGoals$Group.1 == "qualifier"), which(homeGoals$Group.2 == 1))
numHomeGoals <- homeGoals[intersect(which(homeGoals$Group.1 == "qualifier"), which(homeGoals$Group.2 == 1)), ]
numHomeGoals
qualifierHomeGoals <- homeGoals[intersect(which(homeGoals$Group.1 == "qualifier"), which(homeGoals$Group.2 == 1)), ]
qualifierHomeGoals
homeGoals
awayGoals
homeGOals
homeGoals
awayGoals
forecastPrereq <- fitGoals('2015-11-17')
forecastPrereq <- fitGoals('2015-11-17')
source("fitGoals.R")
forecastPrereq <- fitGoals('2015-11-17')
list.files()
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
source("fitGoals.R")
forecastPrereq <- fitGoals("2015-11-17")
q()
forecastPrereq <- fitGoals("2015-11-17")
verifyModel(2016)
source("fitGoals.R")
forecastPrereq <- fitGoals("2015-11-17")
matches <- forecastPrereq[["Matches"]]
matches
forecastPrereq[["MeanGoalsMap"]]
source("fitGoals.R")
forecastPrereq <- fitGoals("2015-11-17")
source("computeDataFrame.R")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
source("computeDataFrame.R")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
matches <- forecastPrereq[["Matches"]]
matches
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), mean)
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
homeGoals
awayGoals
forecastPrereq <- fitGoals("2015-11-17", includeQs=TRUE)
matches <- forecastPrereq[["Matches"]]
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
homeGoals
awayGoals
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), length)
awayGoals
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum, length)
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), c(sum, length))
awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), function(x) c(sum(x), length(x)))
awayGoals
homeGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), function(x) c(sum(x), length(x)))
homeGoals
awayGoals
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), function(x) c(sum(x), length(x)))
homeGoals
awayGoals
numHomeGoals <- homeGoals[intersect(which(homeGoals$Group.1 == "qualifier"), which(homeGoals$Group.2 == 1)), ]
which(homeGoals$Group.1 == "qualifier"), which(homeGoals$Group.2 == 1))
which(homeGoals$Group.1 == "qualifier")
which(homeGoals$Group.1 == "qualifier")
homeGoals[which(homeGoals$Group.1 == "qualifier"), ]
homeGoals[which(homeGoals$Group.1 == "group"), ]
homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 1)), ]
homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 1)), ]
homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 1)), ]
awayGoals[intersect(which(awayGoals$Group.1 == "group"), which(awayGoals$Group.2 == 1)), ]
x <- awayGoals[intersect(which(awayGoals$Group.1 == "group"), which(awayGoals$Group.2 == 1)), ]
x
x + x
merge(x, x)
x
x
y <- homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 1)), ]
y <- homeGoals[which(homeGoals$Group.1 == "group"), ]
y
x
merge(x, y)
rbind(x, y)
x
y
rbind(x, y)
aggregate(rbind(x, y))
aggregate(rbind(x, y), sum)
aggregate(rbind(x, y), FUN=sum)
aggregate(rbind(x, y), "group", sum)
aggregate(rbind(x, y), c("group"), sum)
aggregate(rbind(x, y), list("group"), sum)
aggregate(rbind(x, y), sum)
aggregate(Group.1 ~ Group.2 ~ x.1 ~ x.2, rbind(x, y), sum)
aggregate(rbind(x, y), sum)
z = rbind(x, y)
z
aggregate(z, list(x$Group.1, sum))
aggregate(z, list(x$Group.1), sum)
aggregate(z, list(z$Group.1), sum)
aggregate(z[c("x.1", "x.2")], list(z$Group.1), sum)
z["x.1"]
z
names(z)
z
z["x"]
names(z[["x"]])
z["x"]
z[["x"]]
sum(z[["x"]])
colSums(z[["x"]])
homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 1)), ]
homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 0)), ]
homeGoals
awayGoals
homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 0)), ]
x <- homeGoals[intersect(which(homeGoals$Group.1 == "group"), which(homeGoals$Group.2 == 0)), ]
y <- awayGoals[which(awayGoals$Group.1 == "group"), ]
y
x
y
y <- awayGoals[intersect(which(awayGoals$Group.1 == "group") 0)), ]
y
y <- awayGoals[which(awayGoals$Group.1 == "group"), ]
z
z[["x"]]
colSum(z[["x"]])
colSums(z[["x"]])
colSums(z)
colSums(z["x"])
homeQGoals = homeGoals[which(homeGoals$Group.1 == "qualifier"), ]
homeQGoals
homeQGoals["x"]
homeQGoals["x.1"]
homeQGoals["x"]
homeQGoals[["x"]]
unlist(homeQGoals["x"])
unlist(homeQGoals)
unlist(homeQGoals)
X <- unlist(homeQGoals)
X[1]
X[2]
X[3]
X[4]
X[5]
X["x1"]
X <- vector(homeQGoals)
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), function(x) list("sum"=sum(x), "length"=length(x)))
homeGoals
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), function(x) list("sum"=sum(x), "length"=length(x)))
  homeGoals <- aggregate(matches[, "HomeGoals"],
      list(matches$GeneralContest, matches$HomeAdvantage), sum)
homeGoals
homeGoals[["x"]]
  homeQGoalsFrame = homeGoals[
      which(homeGoals$Group.1 == "qualifier"), ]
homeQGoalsFrame
homeQGoalsFrame[["x"]]
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
as.numeric("0")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
z
z
colSums(z)
colSums(z["x"])
homeGoals <- aggregate(matches[, "HomeGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)

awayGoals <- aggregate(matches[, "AwayGoals"], list(matches$GeneralContest, matches$HomeAdvantage), sum)
awayGoals
homeGoals
awayGoals
homeTGoals = homeGoals[intersect(
      which(homeGoals$Group.1 == "tournament"),
      which(homeGoals$Group.2 == 1)), ]
awayTGoalsHA <- homeGoals[intersect(
      which(homeGoals$Group.1 == "tournament"),
      which(homeGoals$Group.2 == 0)), ]
awayTGoalsNeutral <- awayGoals[
      which(awayGoals$Group.1 == "tournament"), ]
awayTGoals <- rbind(awayTGoalsHA, awayTGoalsNeutral)
awayTGoalsHA
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
integer(0)
integer(0) / 1
integer(0) / 1
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
 incompatible types (from S4 to double) in subassignment type fix
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq <- fitGoals("2015-11-17")
forecastPrereq[[meanGoalsMap]]
forecastPrereq[["MeanGoalsMap"]]
forecastPrereq[["Model"]]
m <- forecastPrereq[["Model"]]
m$AIC
m$BIC
model$AIC
model$BIC
model
m
source("forecastMatch.R")
source("forecastMatch.R")
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", "France")
forecastPrereq
forecastMatch("France", "Romania", "t", "France", forecastPrereq)
forecastMatch("France", "Romania", "t", "France", forecastPrereq)
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", "France", forecastPrereq)
meanGoalsMap[["qHome"]]
meanGoalsMap <- forecastPrereq[["MeanGoalsMap"]]
meanGoalsMap
meanGoalsMap[["tHome"]]
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", "France", forecastPrereq)
forecastMatch("France", "Romania", "t", "", forecastPrereq)
forecastMatch("France", "Romania", "t", "France", forecastPrereq)
forecastMatch("France", "Romania", "t", "", forecastPrereq)
forecastMatch("France", "Romania", "t", forecastPrereq)
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", forecastPrereq)
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", forecastPrereq)
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", forecastPrereq)
forecastMatch("France", "Romania", "t", forecastPrereq, "France")
forecastPrereq <- fitGoals("2016-06-18")
forecastMatch("France", "Romania", "t", forecastPrereq, "France")
forecastMatch("France", "Romania", "t", forecastPrereq, "")
forecastMatch("France", "Romania", "t", forecastPrereq, "France")
forecastMatch("France", "Romania", "t", forecastPrereq, "")
source("forecastMatch.R")
forecastMatch("France", "Romania", "t", forecastPrereq, "")
forecastMatch("France", "Romania", "t", forecastPrereq, "France")
forecastMatch("France", "Switzerland", "t", forecastPrereq, "France")
forecastPrereq <- fitGoals("2016-06-14")
forecastMatch("France", "Switzerland", "t", forecastPrereq, "France")
forecastMatch("France", "Albania", "t", forecastPrereq, "France")
forecastMatch("France", "Albania", "t", forecastPrereq, "")
forecastMatch("France", "Albania", "t", forecastPrereq, "France")
forecastMatch("France", "Albania", "t", forecastPrereq, "")
forecastMatch("France", "Albania", "t", forecastPrereq, "France")
c()
exists(c(), "France")
exists("France", c())
exists("France", c(""))
exists(c(""), "France")
match("France", "")
match("France", c())
match("France", c(""))
match("France", NULL)
match("France", NULL) == NA
is.element("France", c())
is.element("France", c("France"))
source("forecastMatch.R")
forecastMatch("France", "Albania", "t", forecastPrereq, "France")
forecastMatch("France", "Albania", "t", forecastPrereq, "Albania")
forecastMatch("Albania", "France", "t", forecastPrereq, "Albania")
forecastMatch("France", "Germany", "t", forecastPrereq, "France")
forecastPrereq <- fitGoals("2016-07-03")
forecastMatch("France", "Germany", "t", forecastPrereq, "France")
forecastMatch("France", "Germany", "t", forecastPrereq)
forecastMatch("France", "Portugal", "t", forecastPrereq)
forecastPrereq <- fitGoals("2016-07-07")
forecastMatch("France", "Portugal", "t", forecastPrereq)
forecastMatch("France", "Portugal", "t", forecastPrereq, "France")
forecastMatch("France", "Portugal", "t", forecastPrereq)
forecastMatch("France", "Portugal", "t", forecastPrereq, "France")
forecastMatch("England", "Portugal", "t", forecastPrereq, "France")
forecastMatch("Germany", "Portugal", "t", forecastPrereq, "France")

forecastPrereq <- fitGoals("2016-07-07")
source("verifyModel")
source("verifyModel.R")
verifyModel(2016, "France")
clear all
source("verifyModel.R")
verifyModel(2016, "France")
verifyModel(2016, "France")
source("verifyModel.R")
verifyModel(2016, "France")
verifyModel(2016, "France")
forecastMatch("France", "Portugal", "t", forecastPrereq, "France")
forecastMatch("France", "Portugal", "t", forecastPrereq)
forecastMatch("France", "Portugal", "t", forecastPrereq, "France")
forecastMatch("France", "Germany", "t", forecastPrereq, "France")
forecastMatch("France", "Germany", "t", forecastPrereq, "")
forecastMatch("France", "Germany", "t", forecastPrereq, "France")
q()
